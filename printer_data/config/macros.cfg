#####################################################################
#   Print Start Macro
#####################################################################

[gcode_macro PRINT_START]
gcode:
  # Fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  M117 Initializing
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  Chamber_LED_Standby #Set Chamber LED's to Standby Preset
    
  # Homes the printer and sets absolute positioning
  M117 Homing
  STATUS_HOMING
  G28                                                 # Full home (XYZ)
  G90                                                 # Absolute position

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING
    Chamber_Heating_Bed #Set Chamber LED's to Heating Bed Preset
    #M106 S255                                         # Turn on the PT-fan
    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Go to center of the bed
    SET_DISPLAY_TEXT MSG="Soak for 5min"
    M190 S{target_bed}                                # Set target temp for the bed
    G4 P300000
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Wait for chamber temp

  # If the bed temp is not over 90c it skips the heatsoak and just heats up to set temp with a 1 min soak.
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING
    Chamber_Heating_Bed #Set Chamber LED's to Heating Bed Preset
    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Go to center of the bed
    SET_DISPLAY_TEXT MSG="Soak for 5min"
    M190 S{target_bed}                                # Set target temp for the bed
    G4 P300000                                        # Wait 5 min for the bedtemp to stabilize
  {% endif %}

  # Heats up the hotend up to target via slicer
  Chamber_Heating_Hotend #Set Chamber LED's to Heating Hotend Preset
  M107                                                # Turn off partcooling fan
  M109 S{target_extruder}                             # Heat hotend to print temp

  # Create a prime line and starts the print
  Chamber_LED_White #Set Chamber LED's to Full White Preset
  STATUS_PRINTING
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1 #Turn On Filament Sensor
  M117 Printing
  G1 X5 Y4 Z0.4 F10000                                # Go to starting point
  #G1 X115 E20 F1000                                   # Primeline
  G1 X110 E20 F1000                                   # Primeline

#####################################################################
#   Print End Macro
#####################################################################

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    SET_NOZZLE_LEDS_OFF
    SET_LOGO_LEDS_OFF
    Chamber_Print_Finished #Set Chamber LED's to Print Finished Preset
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0 #Turn Off Filament Sensor
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X55 Y110 F3600          ; park nozzle at rear
    SET_SKEW CLEAR=1

#####################################################################
#   Print Pause Macro
#####################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(110) %}      #edit to your park position
    {% set y = params.Y|default(110) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    STATUS_BUSY
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000

#####################################################################
#   Print Resume Macro
#####################################################################

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    G91
    G1 E{e} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    STATUS_PRINTING
    BASE_RESUME


#####################################################################
#   Print Misc Macros
#####################################################################

[gcode_macro SHUTDOWN]
gcode:
  {action_call_remote_method("shutdown_machine")}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    Chamber_LED_Standby #Set Chamber LED's to Standby Preset
    BASE_CANCEL_PRINT

[gcode_macro LOAD_FILAMENT]
gcode:
   STATUS_BUSY
   M109 S200
   M83                            ; set extruder to relative
   G1 E60 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   STATUS_BUSY
   M109 S200
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-60 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute


[gcode_macro PREHEAT_100]
gcode:
  SET_IDLE_TIMEOUT TIMEOUT=43200
  STATUS_HEATING
  M140 S100

#####################################################################
#   Homing Override Macros
#####################################################################

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P3000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P3000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}

  {% if home_all or 'Z' in params %}
    G90
    G1 X55 Y55 F5000
    G28 Z
    G1 Z50
  {% endif %}

#####################################################################
#   LED MACROS
#####################################################################

[gcode_macro Chamber_LED_Standby]
gcode:
  WLED_ON STRIP=chamber PRESET=1

[gcode_macro Chamber_LED_Off]
gcode:
  WLED_ON STRIP=chamber PRESET=2

[gcode_macro Chamber_LED_White]
gcode:
  WLED_ON STRIP=chamber PRESET=3

[gcode_macro Chamber_Print_Finished]
gcode:
  WLED_ON STRIP=chamber PRESET=4

[gcode_macro Chamber_Heating_Bed]
gcode:
  WLED_ON STRIP=chamber PRESET=5

[gcode_macro Chamber_Heating_Hotend]
gcode:
  WLED_ON STRIP=chamber PRESET=6

[gcode_macro Chamber_QGL]
gcode:
  WLED_ON STRIP=chamber PRESET=7

[gcode_macro Chamber_Bed_Mesh]
gcode:
  WLED_ON STRIP=chamber PRESET=8

[gcode_macro Chamber_Print_Paused]
gcode:
  WLED_ON STRIP=chamber PRESET=9

[gcode_macro Chamber_Print_Issue]
gcode:
  WLED_ON STRIP=chamber PRESET=10

####################################################################
#   M600
#####################################################################

[gcode_macro M600]
gcode:
    SET_DISPLAY_TEXT MSG="Change Colour" 
    PAUSE                ; Pause
    Chamber_Print_Paused #Set Chamber LED's to Pause Preset

####################################################################
#   Delayed Macro Disable Filament Sensor
#####################################################################

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

####################################################################
#   Turn Off Filament Sensors
#####################################################################

[gcode_macro TURN_OFF_FILAMENT_SENSORS]
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

####################################################################
#   Klipper Backup Macro
#####################################################################

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

####################################################################
#   Fan Override Macro
#####################################################################

[gcode_macro M106]
description: "Set fan speed (Orca compatible)"
gcode:
    {% set fan_map = {
        0: "Part_cooling_fan",      # Orca P0 → CPAP blower
        #3: "EXHAUST",   # Orca P3 → Exhaust
        2: "Blower_fan",     # Uncomment if you define AUX
    } %}
    {% set p = params.P|int if 'P' in params else 0 %}
    {% set fan = fan_map[p] if p in fan_map else fan_map[0] %}
    {% set speed = (params.S|float / 255 if 'S' in params else 1.0) %}
    SET_FAN_SPEED FAN={fan} SPEED={speed}

[gcode_macro M107]
description: "Turn off fans. No P = all, P# = specific"
gcode:
    {% set fan_map = {
        0: "Partcooling",
        #3: "EXHAUST",
        2: "Blower",
    } %}
    {% if 'P' in params %}
        {% set p = params.P|int %}
        {% if p in fan_map %}
            SET_FAN_SPEED FAN={fan_map[p]} SPEED=0
        {% else %}
            RESPOND PREFIX="warn" MSG="Unknown fan index"
        {% endif %}
    {% else %}
        # No P -> turn off all mapped fans
        {% for f in fan_map.values() %}
            SET_FAN_SPEED FAN={f} SPEED=0
        {% endfor %}
    {% endif %}